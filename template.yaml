apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: playground
  description: |
    This accelerator provides Terraform modules to provision Databricks workspaces,
        compute, Unity Catalog, metastores, and security configurations, designed to be
        composed together for tailored deployments.
  tags:
    - databricks
    - terraform
    - aws
    - oidc
spec:
  owner: group:accelerator-publisher
  type: service
  parameters:
    - $yaml: ./parameters/metastore_security_config_parameters.yaml
    - title: Module Selection
      properties:
        isWorkspaceEnabled:
          title: Enable Workspace Module?
          type: boolean
          default: false
        isCatalogEnabled:
          title: Enable Catalog Module?
          type: boolean
          default: false
        isComputeEnabled:
          title: Enable Compute Module?
          type: boolean
          default: false
        isSecurityEnabled:
          title: Enable Security Module?
          type: boolean
          default: false
        isCiCdEnabled:
          title: Enable CI/CD Module?
          type: boolean
          default: false
    - $yaml: ./parameters/workspace_config_parameters.yaml
      if: ${{ parameters.isWorkspaceEnabled }}
      title: Workspace Configuration
    - $yaml: ./parameters/catalog_config_parameters.yaml
      if: ${{ parameters.isCatalogEnabled }}
      title: Catalog Configuration
    - $yaml: ./parameters/compute_config_parameters.yaml
      if: ${{ parameters.isComputeEnabled }}
      title: Compute Configuration
    - $yaml: ./parameters/security_config_parameters.yaml
      if: ${{ parameters.isSecurityEnabled }}
      title: Security Configuration
    - $yaml: ./parameters/ci_cd_config_parameters.yaml
      if: ${{ parameters.isCiCdEnabled }}
      title: CI/CD Configuration
    
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:plain
      input:
        url: ./skeleton
  
    - id: publish
      name: Publish to GitHub
      action: publish:github
      input:
        allowedHosts: [ 'github.com' ]
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: private
        defaultBranch: main
        token: ${{ secrets.USER_OAUTH_TOKEN or false }}
        description: Databricks Terraform Accelerator
        secrets:
          DATABRICKS_CLIENT_SECRET: ${{ secrets.databricksClientSecret }}
        repoVariables:
          DATABRICKS_HOST: ${{ parameters.databricksHost }}
          DATABRICKS_CLIENT_ID: ${{ parameters.databricksClientId }}
          AWS_REGION: ${{ parameters.awsRegion }}
          AWS_ROLE_TO_ASSUME: ${{ parameters.awsOidcRoleArn }}
          TF_BACKEND_BUCKET: ${{ parameters.tfStateBucket }}
          TF_VAR_s3_bucket_name_main: ${{ parameters.appS3BucketName }}   

  output:
    links:
      - title: GitHub Repository
        icon: github
        url: ${{ steps.publish.output.remoteUrl }}
